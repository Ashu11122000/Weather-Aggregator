spring.application.name=weather-data-aggregator

# Server Configuration
server.port=8080

# MongoDB Configuration (Local)
spring.data.mongodb.uri=mongodb://localhost:27017/weatherDB

spring.kafka.bootstrap-servers=localhost:9092

# Consumer properties
spring.kafka.consumer.group-id=weather-group

# When a Kafka consumer starts, it needs to know where to start reading messages from a topic.
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka messages consist of a key and a value. The deserializer is responsible for converting the incoming binary data (bytes) into a readable format (e.g., String, JSON, Integer, etc.).
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer properties
# When a Kafka producer sends messages, it must convert the message key into a format that Kafka understands. A serializer does this conversion.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer



